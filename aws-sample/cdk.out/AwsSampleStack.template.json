{
  "Resources": {
    "LeanPartnerReactClientNestedStackNestedStackLeanPartnerReactClientNestedStackNestedStackResource5742A4F8": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": {
          "Fn::Join": [
            "",
            [
              "https://s3.",
              {
                "Ref": "AWS::Region"
              },
              ".",
              {
                "Ref": "AWS::URLSuffix"
              },
              "/",
              {
                "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
              },
              "/29c61f7e5d3cee16060a34678fad103d2db12ec912970241b9b04e033a125bea.json"
            ]
          ]
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "AwsSampleStack/LeanPartnerReactClientNestedStack.NestedStack/LeanPartnerReactClientNestedStack.NestedStackResource",
        "aws:asset:path": "AwsSampleStackLeanPartnerReactClientNestedStack4D27AB3B.nested.template.json",
        "aws:asset:property": "TemplateURL"
      }
    },
    "InternalRestApi29EED6E3": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "InternalRestApi"
      },
      "Metadata": {
        "aws:cdk:path": "AwsSampleStack/InternalRestApi/Resource"
      }
    },
    "InternalRestApiCloudWatchRole80B5ECA2": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "AwsSampleStack/InternalRestApi/CloudWatchRole/Resource"
      }
    },
    "InternalRestApiAccount7E914AA8": {
      "Type": "AWS::ApiGateway::Account",
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "InternalRestApiCloudWatchRole80B5ECA2",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "InternalRestApi29EED6E3"
      ],
      "Metadata": {
        "aws:cdk:path": "AwsSampleStack/InternalRestApi/Account"
      }
    },
    "InternalRestApiDeploymentBDF68DC0b1ea6f4d43cd1a76f5288128e6d8cffe": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "InternalRestApi29EED6E3"
        },
        "Description": "Automatically created by the RestApi construct"
      },
      "DependsOn": [
        "InternalRestApicustomersOPTIONS1CF85248",
        "InternalRestApicustomersD9FD9469"
      ],
      "Metadata": {
        "aws:cdk:path": "AwsSampleStack/InternalRestApi/Deployment/Resource"
      }
    },
    "InternalRestApiDeploymentStageprod1853C303": {
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "RestApiId": {
          "Ref": "InternalRestApi29EED6E3"
        },
        "DeploymentId": {
          "Ref": "InternalRestApiDeploymentBDF68DC0b1ea6f4d43cd1a76f5288128e6d8cffe"
        },
        "StageName": "prod"
      },
      "DependsOn": [
        "InternalRestApiAccount7E914AA8"
      ],
      "Metadata": {
        "aws:cdk:path": "AwsSampleStack/InternalRestApi/DeploymentStage.prod/Resource"
      }
    },
    "InternalRestApicustomersD9FD9469": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "InternalRestApi29EED6E3",
            "RootResourceId"
          ]
        },
        "PathPart": "customers",
        "RestApiId": {
          "Ref": "InternalRestApi29EED6E3"
        }
      },
      "Metadata": {
        "aws:cdk:path": "AwsSampleStack/InternalRestApi/Default/customers/Resource"
      }
    },
    "InternalRestApicustomersOPTIONS1CF85248": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "InternalRestApicustomersD9FD9469"
        },
        "RestApiId": {
          "Ref": "InternalRestApi29EED6E3"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Origin": "'localhost:3000'",
                "method.response.header.Vary": "'Origin'",
                "method.response.header.Access-Control-Allow-Methods": "'GET'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Vary": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "StatusCode": "204"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "AwsSampleStack/InternalRestApi/Default/customers/OPTIONS/Resource"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAA/1WP3Q6CMAyFn8X7MUWj94i3xgQfwMxRsfxsC9skhOzdLRmJeNWvp+1pu+fpke82YrCJLJukxSef7k7IhuUvFYFqj0kYrISDQYx8KsC6zODcscJMSu2VYxcwrR47ICR1lZFbBYstAY1q30s4C/tLFs/IV3BvXc5SpMBQdLRet7GPYggz3bwz3v3NEudalehQq8CULoHXdvtJTzw90L+1RUx6Ohc74EWMX1ewbO0LAQAA"
      },
      "Metadata": {
        "aws:cdk:path": "AwsSampleStack/CDKMetadata/Default"
      },
      "Condition": "CDKMetadataAvailable"
    }
  },
  "Outputs": {
    "InternalRestApiEndpointEEB9273A": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "InternalRestApi29EED6E3"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/",
            {
              "Ref": "InternalRestApiDeploymentStageprod1853C303"
            },
            "/"
          ]
        ]
      }
    },
    "TodoAppDomainName": {
      "Value": {
        "Fn::GetAtt": [
          "LeanPartnerReactClientNestedStackNestedStackLeanPartnerReactClientNestedStackNestedStackResource5742A4F8",
          "Outputs.AwsSampleStackLeanPartnerReactClientNestedStackLeanPartnerReactClientDistributionCFDistribution8B96EDD4DomainName"
        ]
      }
    }
  },
  "Conditions": {
    "CDKMetadataAvailable": {
      "Fn::Or": [
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "af-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ca-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-northwest-1"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-3"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "me-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "sa-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-2"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-2"
              ]
            }
          ]
        }
      ]
    }
  },
  "Parameters": {
    "BootstrapVersion": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
    }
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5"
                  ],
                  {
                    "Ref": "BootstrapVersion"
                  }
                ]
              }
            ]
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
        }
      ]
    }
  }
}